name: Build container image and deploy on dockerhub
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'renovate.json'
  pull_request:
  workflow_dispatch:

jobs:
  success:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.14
      - name: Check the test syntax
        run: ruby -c test.rb
      - name: Compute name
        env:
          SLUG: ${{ github.repository }}
        run: |
          IMAGE_NAME="$(echo $SLUG | tr '[:upper:]' '[:lower:]')"
          echo IMAGE_NAME="$IMAGE_NAME"
          echo IMAGE_NAME="$IMAGE_NAME" >> $GITHUB_ENV
      - name: Build Image
        run: |
          echo docker build -t "$IMAGE_NAME:latest" .
          docker build -t "$IMAGE_NAME:latest" .
      - name: Run tests
        run: ./test.rb
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@v4.0.0
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - name: Configure Node
        run: npm install
      - name: Check whether we should actually run the deployment
        id: should-deploy
        run: >-
          echo "should-deploy=${{
            !github.event.repository.fork
            && (
              github.event_name != 'pull_request'
              || github.event.pull_request.head.repo.full_name == github.repository
            )
          }}$" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        if: ${{ steps.should-deploy.outputs.should-deploy }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.io
      - name: Run semantic release
        if: ${{ steps.should-deploy.outputs.should-deploy }}
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
