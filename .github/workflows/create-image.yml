name: Build container image and deploy on dockerhub
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'renovate.json'
  pull_request:

jobs:
  Build-And-Deploy-Container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.1.0
      - name: Check the test syntax
        run: ruby -c test.rb
      - name: Compute name
        env:
          SLUG: ${{ github.repository }}
        run: |
          IMAGE_NAME="$(echo $SLUG | tr '[:upper:]' '[:lower:]')"
          echo IMAGE_NAME="$IMAGE_NAME"
          echo IMAGE_NAME="$IMAGE_NAME" >> $GITHUB_ENV
      - name: Compute version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          MAJOR_MINOR=${LAST_TAG%.*}
          COMMIT_COUNT_FROM_TAG="$(git log --oneline "$MAJOR_MINOR.0".. | wc -l)"
          VERSION="$MAJOR_MINOR.$COMMIT_COUNT_FROM_TAG"
          echo Version has been computed as $VERSION
          echo VERSION="$VERSION" >> $GITHUB_ENV
      - name: Build Image
        run: |
          echo docker build -t "$IMAGE_NAME:$VERSION" .
          docker build -t "$IMAGE_NAME:$VERSION" .
      - name: Run tests
        run: ./test.rb
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.io
      - name: Deploy Image
        if: ${{ github.event_name != 'pull_request' }}
        run: docker push --all-tags $IMAGE_NAME
      - uses: ncipollo/release-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        name: Create GitHub Release
        with:
          tag: ${{ env.VERSION }}
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
